import codecademylib3_seaborn
import matplotlib.pyplot as plt
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from svm_visualization import draw_boundary
from players import aaron_judge, jose_altuve, david_ortiz

fig, ax = plt.subplots()

def find_strike_zone(dataset):
# Getting to know the data and cleaning data
  print(dataset.head())
  print(daatset.description.unique())
  print(dataset.type.unique())
  dataset['type'] = dataset['type'].map({'S': 1, 'B': 0})
  print(dataset.type)
  print(dataset['plate_x'])
  dataset = dataset.dropna(subset = ['plate_x', 'plate_z', 'strikes', 'type'])

  # Plot the points
  plt.scatter(dataset['plate_x'], dataset['plate_z'], c = dataset['type'], cmap = plt.cm.coolwarm, alpha = 0.25)

  # Build SVM
  training_set, validation_set = train_test_split(dataset, random_state = 1)
   # Which gamma and C value will give the best accuracy rate?
  largest = {'value': 0, 'gamma': 1, 'C':1}
  for gamma in range(1,7):
    for C in range(1,7):
      classifier = SVC(kernel = 'rbf', C = C, gamma = gamma)
      classifier.fit(training_set[['plate_x', 'plate_z', 'strikes']], training_set['type'])
      score = classifier.score(validation_set[['plate_x', 'plate_z', 'strikes']], validation_set['type'])
      if (score > largest['value']):
          largest['value'] = score
          largest['gamma'] = gamma
          largest['C'] = C
  print(largest)
  # draw_boundary(ax, classifier)
  ax.set_ylim(-2,6)
  ax.set_xlim(-3,3)
  plt.show()
